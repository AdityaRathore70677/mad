1) js
create start.js inside the js folder:
if ('serviceWorker' in navigator) {
        	navigator.serviceWorker
        	.register("/sw.js")
        	.then((reg)=>console.log("registered",reg))
        	.catch((err)=>console.log("err",err));
} else {
        	console.log('No service worker support in this browser');
}


2) Manifest File
create a manifest.json add icon to the icons folder.
{
"name": "Program_8",
"short_name": "Program_8",
"start_url": "/my.html",
"display": "fullscreen",
"background_color": "#ffff00",
"description": "A simple applicationfor manifestation",
"orientation": "portrait-primary",
"theme_color":"#2196F3",
"icons": [
{
"src": "/icons/rvce_logo (1).png",
"sizes": "108x108",
"type": "image/png"
}
]
}


3) create a file myfirst.html
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel=”manifest” href=”manifest.json”>
<title>program_8</title>
</head>
<body>
<script src="/js/start.js"></script>
Display of images: <p>Image 1 - > <img src="img/bathroomprod.jpg" width="100" height="100"></p>
<p>Image 2 - > <img src="img/camera.jpg" width="100" height="100"></p>
<p>Image 3 - > <img src="img/cosmetics.jpg" width="100" height="100"></p>
<p>Image 4 - > <img src="img/headphone.jpeg" width="100" height="100"></p>
</body>
</html>


4) Create sw.js ----> ServiceWorker
var mycache = "mycache";
var assests = [
        	"/", 	
        	"/my.html",
        	"/img/bathroomprod.jpg",
        	"/img/camera.jpg",
        	"/img/headphone.jpeg",
        	"/img/cosmetics.jpg",
        	"/js/start.js",
        	"/sw.js",
        	“/manifest.json”,
];
self.addEventListener('install', _event => {
        	console.log('inside the install', _event);
        	caches.open(mycache)
        	.then(cache => {
                    	cache.addAll(assests);
        	});
});
 
self.addEventListener('activate', _event => {
        	console.log('inside the activate', _event);
});
 
self.addEventListener('fetch', async (event) => {
        	event.respondWith(
                    	caches.match(event.request)
                                	.then(respevt => {
                                            	return respevt || fetch(event.request);
                    	})
        	);
        	console.log('inside the fetched', event);
});

create img folder and files like,
“/img/bathroomprod.jpg",
        	"/img/camera.jpg",
        	"/img/headphone.jpeg",
        	"/img/cosmetics.jpg",
